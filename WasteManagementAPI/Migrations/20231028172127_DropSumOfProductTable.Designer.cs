// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WasteManagementAPI.Models;

#nullable disable

namespace WasteManagementAPI.Migrations
{
    [DbContext(typeof(WastMangementContext))]
    [Migration("20231028172127_DropSumOfProductTable")]
    partial class DropSumOfProductTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.Citizen", b =>
                {
                    b.Property<int>("CitizenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CitizenId"));

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<int>("UserProductId")
                        .HasColumnType("int");

                    b.HasKey("CitizenId");

                    b.HasIndex("UserProductId");

                    b.ToTable("Citizens");
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.Contractor", b =>
                {
                    b.Property<int>("ContractorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractorId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nmae")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContractorId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Contractors");
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.MainProduct", b =>
                {
                    b.Property<int>("MainProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MainProductId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MainProductId");

                    b.ToTable("MainProducts");

                    b.HasData(
                        new
                        {
                            MainProductId = 1,
                            Name = "Bread"
                        },
                        new
                        {
                            MainProductId = 2,
                            Name = "Iron"
                        },
                        new
                        {
                            MainProductId = 3,
                            Name = "Plastic"
                        });
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.Municipality", b =>
                {
                    b.Property<int>("MunicipalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MunicipalityId"));

                    b.Property<int>("ContractorId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mayor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.HasKey("MunicipalityId");

                    b.HasIndex("ContractorId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Municipality");
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.Supervisor", b =>
                {
                    b.Property<int>("SupervisorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupervisorId"));

                    b.Property<bool>("IsOk")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupervisorId");

                    b.ToTable("Supervisor");
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.UserProduct", b =>
                {
                    b.Property<int>("UserProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserProductId"));

                    b.Property<int>("MainProductId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("UserProductId");

                    b.HasIndex("MainProductId")
                        .IsUnique();

                    b.ToTable("UserProducts");
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.Citizen", b =>
                {
                    b.HasOne("WasteManagementAPI.Models.DomainModels.UserProduct", "UserProduct")
                        .WithMany("Citizens")
                        .HasForeignKey("UserProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProduct");
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.Contractor", b =>
                {
                    b.HasOne("WasteManagementAPI.Models.DomainModels.Employee", "Employee")
                        .WithMany("Contractors")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.Municipality", b =>
                {
                    b.HasOne("WasteManagementAPI.Models.DomainModels.Contractor", "Contractor")
                        .WithMany("Municipality")
                        .HasForeignKey("ContractorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WasteManagementAPI.Models.DomainModels.Supervisor", "Supervisor")
                        .WithMany("Municipality")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contractor");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.UserProduct", b =>
                {
                    b.HasOne("WasteManagementAPI.Models.DomainModels.MainProduct", "MainProduct")
                        .WithOne("UserProduct")
                        .HasForeignKey("WasteManagementAPI.Models.DomainModels.UserProduct", "MainProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainProduct");
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.Contractor", b =>
                {
                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.Employee", b =>
                {
                    b.Navigation("Contractors");
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.MainProduct", b =>
                {
                    b.Navigation("UserProduct")
                        .IsRequired();
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.Supervisor", b =>
                {
                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("WasteManagementAPI.Models.DomainModels.UserProduct", b =>
                {
                    b.Navigation("Citizens");
                });
#pragma warning restore 612, 618
        }
    }
}
